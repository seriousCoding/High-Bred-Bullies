require("dotenv").config();
const express = require("express");
const axios = require("axios");
const cors = require("cors");
const bodyParser = require("body-parser");

const app = express();
app.use(cors());
app.use(bodyParser.json());

const COINBASE_API_URL = "https://api.coinbase.com/v2";
const COINBASE_COMMERCE_API_URL = "https://api.commerce.coinbase.com";
const COINBASE_TRADE_API_URL = "https://api.coinbase.com/v3/brokerage";

const { CLIENT_ID, CLIENT_SECRET, API_KEY, API_SECRET, COINBASE_COMMERCE_API_KEY, REDIRECT_URI } = process.env;

// ðŸš€ 1. OAuth Authentication - Redirect User to Coinbase Login
app.get("/auth/login", (req, res) => {
    const authUrl = `https://www.coinbase.com/oauth/authorize?client_id=${CLIENT_ID}&redirect_uri=${REDIRECT_URI}&response_type=code&scope=wallet:accounts:read,wallet:transactions:read`;
    res.redirect(authUrl);
});

// ðŸš€ 2. OAuth Callback - Exchange Code for Access Token
app.get("/auth/callback", async (req, res) => {
    const { code } = req.query;
    if (!code) return res.status(400).json({ error: "Authorization code missing" });

    try {
        const response = await axios.post("https://www.coinbase.com/oauth/token", {
            grant_type: "authorization_code",
            code,
            client_id: CLIENT_ID,
            client_secret: CLIENT_SECRET,
            redirect_uri: REDIRECT_URI,
        }, { headers: { "Content-Type": "application/x-www-form-urlencoded" } });

        res.json({ access_token: response.data.access_token });
    } catch (error) {
        res.status(500).json({ error: error.response.data });
    }
});

// ðŸš€ 3. Fetch User Profile
app.get("/user", async (req, res) => {
    const { token } = req.query;
    if (!token) return res.status(400).json({ error: "Missing access token" });

    try {
        const response = await axios.get(`${COINBASE_API_URL}/user`, {
            headers: { Authorization: `Bearer ${token}` }
        });
        res.json(response.data);
    } catch (error) {
        res.status(500).json({ error: error.response.data });
    }
});

// ðŸš€ 4. Fetch Wallets & Balances
app.get("/wallets", async (req, res) => {
    const { token } = req.query;
    if (!token) return res.status(400).json({ error: "Missing access token" });

    try {
        const response = await axios.get(`${COINBASE_API_URL}/accounts`, {
            headers: { Authorization: `Bearer ${token}` }
        });
        res.json(response.data);
    } catch (error) {
        res.status(500).json({ error: error.response.data });
    }
});

// ðŸš€ 5. Get Recent Transactions
app.get("/transactions", async (req, res) => {
    const { token, account_id } = req.query;
    if (!token || !account_id) return res.status(400).json({ error: "Missing parameters" });

    try {
        const response = await axios.get(`${COINBASE_API_URL}/accounts/${account_id}/transactions`, {
            headers: { Authorization: `Bearer ${token}` }
        });
        res.json(response.data);
    } catch (error) {
        res.status(500).json({ error: error.response.data });
    }
});

// ðŸš€ 6. Create a Payment Charge (Coinbase Commerce)
app.post("/create-charge", async (req, res) => {
    try {
        const { amount, currency, description } = req.body;
        const response = await axios.post(`${COINBASE_COMMERCE_API_URL}/charges`, {
            name: "Payment",
            description,
            local_price: { amount, currency },
            pricing_type: "fixed_price"
        }, { headers: { "X-CC-Api-Key": COINBASE_COMMERCE_API_KEY, "Content-Type": "application/json" } });

        res.json(response.data);
    } catch (error) {
        res.status(500).json({ error: error.response.data });
    }
});

// ðŸš€ 7. Get Market Data (Coinbase Advanced Trade)
app.get("/market-data", async (req, res) => {
    try {
        const response = await axios.get(`${COINBASE_TRADE_API_URL}/products`, {
            headers: { Authorization: `Bearer ${API_KEY}` }
        });
        res.json(response.data);
    } catch (error) {
        res.status(500).json({ error: error.response.data });
    }
});

// ðŸš€ 8. Place a Trade Order (Coinbase Advanced Trade)
app.post("/place-order", async (req, res) => {
    try {
        const { product_id, side, size, price } = req.body;
        const response = await axios.post(`${COINBASE_TRADE_API_URL}/orders`, {
            product_id,
            side,
            size,
            price,
            type: "limit"
        }, { headers: { Authorization: `Bearer ${API_KEY}`, "Content-Type": "application/json" } });

        res.json(response.data);
    } catch (error) {
        res.status(500).json({ error: error.response.data });
    }
});

// Start Server
app.listen(5000, () => console.log("Coinbase Unified API running on http://localhost:5000"));
