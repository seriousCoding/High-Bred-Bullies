version: '3.8'

services:
  app:
    build: .
    ports:
      - "5000:5000"
    environment:
      # Database Configuration
      DATABASE_URL: postgresql://username:password@db:5432/high_bred_bullies
      PGHOST: db
      PGPORT: 5432
      PGUSER: postgres
      PGPASSWORD: your_secure_password
      PGDATABASE: high_bred_bullies
      
      # Authentication
      JWT_SECRET: your_jwt_secret_key_32_characters_minimum
      
      # Stripe Payment Processing
      STRIPE_SECRET_KEY: sk_test_your_stripe_secret_key
      VITE_STRIPE_PUBLIC_KEY: pk_test_your_stripe_public_key
      
      # OpenAI Integration
      OPENAI_API_KEY: your_openai_api_key
      
      # Email Configuration
      SMTP_HOST: your_smtp_host
      SMTP_PORT: 587
      SMTP_USER: your_smtp_username
      SMTP_PASS: your_smtp_password
      SMTP_FROM: noreply@yourdomain.com
      
      # Application
      NODE_ENV: production
      PORT: 5000
    depends_on:
      - db
    restart: unless-stopped
    volumes:
      - ./logs:/app/logs
    networks:
      - app-network

  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: high_bred_bullies
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: your_secure_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - app
    restart: unless-stopped
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data: